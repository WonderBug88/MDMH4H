import pandas as pd

# Correct the file paths to use raw string literals or double backslashes
excel_file_path = 'C:\\Users\\juddu\\OneDrive\\Mission Critical Projects\\Vendor Onboarding APP\\Vendor Data Files (May not be updated)\\Ganesh Mills Price Catalog Effective February 15,2024 in excel.xlsx'
output_file_path = 'C:\\Users\\juddu\\OneDrive\\Mission Critical Projects\\GaneshETL.csv'

# Load the workbook
excel_data = pd.read_excel(excel_file_path)

# Initialize an empty DataFrame to store all product details
all_product_details = []

# Initialize a dictionary to hold the current parent product details
current_parent_details = {}

# Iterate over the DataFrame
for index, row in excel_data.iterrows():
    # Check if the row contains attributes in Column B (assume attribute names are in Column B)
    if pd.notnull(row['Short Description']) and any(attr in row['Short Description'] for attr in ['Quality:', 'Specs:', 'Color:', 'Description:']):
        # Capture attribute value from Column C
        attribute_name = row['Short Description'].split(':')[0]  # Get the attribute name (e.g., 'Quality')
        current_parent_details[attribute_name] = row['Size']  # Get the corresponding value from Column C
    elif pd.notnull(row['Size']):
        # This row contains a child product, capture its details and the current parent details
        product_details = {
            'Ganesh Mills Item No.': row['Ganesh Mills Item No.'],
            'Short Description': row['Short Description'],
            'Size': row['Size'],
            'Weight': row['Weight'],
            'Special Price': row['Special Price'],
            'Unit': row['Unit'],
            'Case Qty': row['Case Qty'],
            'Bale / Carton': row['Bale / Carton'],
            'Dims LxWxH': row['Dims LxWxH'],
            'Wt/Ctn': row['Wt/Ctn'],
            **current_parent_details  # Include the parent product details
        }
        all_product_details.append(product_details)


        # Append the product details to the all_product_details DataFrame
        all_product_details_df = pd.DataFrame(all_product_details)


# Output the DataFrame to a CSV file
all_product_details_df.to_csv(output_file_path, index=False)


