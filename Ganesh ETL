import pandas as pd

# Correct the file paths to use raw string literals or double backslashes
excel_file_path = 'C:\\Users\\juddu\\OneDrive\\Mission Critical Projects\\Vendor Onboarding APP\\Vendor Data Files (May not be updated)\\Ganesh Mills Price Catalog Effective February 15,2024 in excel.xlsx'
output_file_path = 'C:\\Users\\juddu\\OneDrive\\Mission Critical Projects\\GaneshETL.csv'

# Load the workbook
excel_data = pd.read_excel(excel_file_path)

# Initialize an empty DataFrame to store all product details
all_product_details = []

# Initialize a dictionary to hold the current parent product details
current_parent_product = ""
current_parent_details = {}  # Ensure this is a dictionary

# Iterate over the DataFrame
for index, row in excel_data.iterrows():
    item_no = str(row['Ganesh Mills Item No.'])
    
    if item_no.isupper() and not any(char.isdigit() for char in item_no):
        current_parent_product = item_no
        current_parent_details = {}  # Reset for a new parent product
        print(f"Parent product found: {current_parent_product}")

    elif pd.notnull(row['Short Description']) and any(attr in row['Short Description'] for attr in ['Quality:', 'Specs:', 'Color:', 'Description:']):
        # This block is supposed to capture and assign attribute values, but there's a mistake
        # 'attribute_value' is not defined before this print statement
        attribute_name = row['Short Description'].split(':')[0]
        attribute_value = row['Size'] if pd.notnull(row['Size']) else ''  # Assuming 'Size' holds the attribute value
        current_parent_details[attribute_name.strip()] = attribute_value
        print(f"Attribute found: {attribute_name} = {attribute_value}")  # Corrected print statement

    elif pd.notnull(row['Size']):
        # Construct product_details only within this block
        product_details = {
            'Parent Product': current_parent_product,
            'Ganesh Mills Item No.': row['Ganesh Mills Item No.'],
            'Short Description': row['Short Description'],
            'Size': row['Size'],
            'Weight': row['Weight'],
            'Special Price': row['Special Price'],
            'Unit': row['Unit'],
            'Case Qty': row['Case Qty'],
            'Bale / Carton': row['Bale / Carton'],
            'Dims LxWxH': row['Dims LxWxH'],
            'Wt/Ctn': row['Wt/Ctn'],
            **current_parent_details
        }
        all_product_details.append(product_details)
        print(f"Processing child product: {row['Ganesh Mills Item No.']}")

# Convert and save the list of product details after the loop
all_product_details_df = pd.DataFrame(all_product_details)
all_product_details_df.to_csv(output_file_path, index=False)



# Append the product details to the all_product_details DataFrame
all_product_details_df = pd.DataFrame(all_product_details)


# Output the DataFrame to a CSV file
all_product_details_df.to_csv(output_file_path, index=False)

if pd.notnull(row['Ganesh Mills Item No.']) and row['Ganesh Mills Item No.'].isupper():
    print(f"Parent product found: {row['Ganesh Mills Item No.']}")
    # Your code to handle parent products
    print(all_product_details_df.head())
